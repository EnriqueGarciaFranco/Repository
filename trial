{"cells":[{"cell_type":"markdown","metadata":{"id":"xViBARSUQvbo"},"source":["## Calculation on real operating pressure across reverse osmosis membrane\n"]},{"cell_type":"markdown","source":["Hello! You can fully run this notebook on Google Colab for free! The lines below install the packages used. Once installed, you could skip them on the same session"],"metadata":{"id":"I9mrCmDB7w18"}},{"cell_type":"code","source":["!pip install condacolab #I use Google Colab because it eases installation\n","import condacolab\n","condacolab.install_miniforge()\n","!conda install -c conda-forge reaktoro"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddh1uggvBs3P","executionInfo":{"status":"ok","timestamp":1661334503989,"user_tz":-120,"elapsed":12963,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}},"outputId":"07550797-5ee5-44e2-bc37-e8dc1780e102"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: condacolab in /usr/local/lib/python3.7/site-packages (0.1.3)\n","‚ú®üç∞‚ú® Everything looks OK!\n","Collecting package metadata (current_repodata.json): - \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\bdone\n","Solving environment: - \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\b/ \b\b- \b\b\\ \b\b| \b\bdone\n","\n","# All requested packages already installed.\n","\n","Retrieving notices: ...working... done\n"]}]},{"cell_type":"markdown","source":["#Introduction"],"metadata":{"id":"8Rew_rBj7oeh"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":322},"executionInfo":{"elapsed":153,"status":"ok","timestamp":1661334503993,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"},"user_tz":-120},"id":"PnXDXd0vUE7I","outputId":"e6350359-b2bd-465f-f6f2-f08f3a3ca863"},"outputs":[{"output_type":"execute_result","data":{"text/html":["<img src=\"https://cdn11.bigcommerce.com/s-g6xc349ydi/images/stencil/original/products/113/4759/sistema-osmosis-inversa-industrial-para-agua-salobre-imagen1__38869.1603754875.jpg?c=2\" width=\"600\"/>"],"text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":2}],"source":["from IPython.core.display import display, HTML, Image  \n","\n","Image(url= \"https://cdn11.bigcommerce.com/s-g6xc349ydi/images/stencil/original/products/113/4759/sistema-osmosis-inversa-industrial-para-agua-salobre-imagen1__38869.1603754875.jpg?c=2\", width = 600)\n"]},{"cell_type":"markdown","metadata":{"id":"onLCWQIJZ3fv"},"source":["A typical industrial-scale reverse osmosis device is shown above. The five tubes are rolled, intending to increase the radial area along the axial axis. Inside, there is an engineered material is wound along the center to give as many layers of membrane as possible.  This results in a greater amount of permiate per square meter installed. \n","\n","This example will deal with a small device meant for households."]},{"cell_type":"markdown","source":["##Data entry"],"metadata":{"id":"u3bTXWd18KJ4"}},{"cell_type":"code","execution_count":3,"metadata":{"id":"hLgnkvtyQSJe","executionInfo":{"status":"ok","timestamp":1661334503995,"user_tz":-120,"elapsed":142,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"outputs":[],"source":["import reaktoro as rkt\n","from reaktoro import *\n","import pandas as pd"]},{"cell_type":"markdown","metadata":{"id":"p-upHhg_Y8y-"},"source":["During this part of the script, a black box mass balance will be performed, dividing an input stream into two outputs. Reverse osmosis membranes selectively permeate the water, retaining the concentrated salt. By choosing the two permiation fractions, one for H2O and another for all salts, the system is fully defined.\n","\n","A typical tap composition was taken from database: \n","https://www.open.edu/openlearn/mod/oucontent/view.php?printable=1&id=20880\n","\n","The values of the permiating fractions will be taken from the manual:\n","https://www.purewaterproducts.com/img/docs/manuals/FLEXEON-210-LT-SERIES-USERS-MANUAL.pdf\n","\n","The goal of the notebook is to match the calulatated operating pressure with such that the manufacturer indicates in that reference."]},{"cell_type":"code","source":["Water = pd.DataFrame(index = ['Ca+2','Mg+2','Na+','Cl-','NO3-','SO4-2'], columns=[\"loading\", \"wt_fraction_dry\"])\n","\n","Water.loc[\"Ca+2\" ,  \"loading\"]   =  102  #mg/L\n","Water.loc[\"Mg+2\",   \"loading\"]   =  8.81 #mg/L\n","Water.loc[\"Na+\" ,   \"loading\"]   =  49.1 #mg/L\n","Water.loc[\"Cl-\",    \"loading\"]   =  73.9 #mg/L\n","Water.loc[\"NO3-\",   \"loading\"]   =  20.6 #mg/L\n","Water.loc[\"SO4-2\",  \"loading\"]   =  120  #mg/L\n","\n","Water.wt_fraction_dry = (Water['loading'] / Water['loading'].sum())\n","\n","#print(Water)"],"metadata":{"id":"O0VeIntqDW_Z","executionInfo":{"status":"ok","timestamp":1661334503998,"user_tz":-120,"elapsed":142,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"id":"bmVc2I8hPPK4","executionInfo":{"status":"ok","timestamp":1661334504001,"user_tz":-120,"elapsed":142,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"outputs":[],"source":["T_env = 25 #C\n","T_env = T_env + 273.15 #K\n","\n","P_env = 3 #atm #The water is entering pressurized from the water network"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":142,"status":"ok","timestamp":1661334504004,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"},"user_tz":-120},"id":"3GDFybvmRAst","outputId":"857ea023-48ed-4f78-a3e0-66c0881d3994"},"outputs":[{"output_type":"stream","name":"stdout","text":["An inflow of brackish water enters a Reverse Osmosis Unit 25.0 C and 3 atm\n","With a Total Dissolved Solids (TDS) of 550 mg/kg\n"]}],"source":["mass_flow_solution = 1/60 #kg/s\n","TDS = 550 #mg_solids_kg_solution\n","\n","liquid_permiating_fraction = 0.47 #Mass fraction of water that permiates throught the membrane\n","solute_permiating_fraction = 0.01  #Mass fraction of solids that permiates though the membrane \n","\n","print(\"An inflow of brackish water enters a Reverse Osmosis Unit\", T_env - 273.15 , \"C\", \"and\", P_env, \"atm\")\n","print(\"With a Total Dissolved Solids (TDS) of\", TDS, \"mg/kg\")"]},{"cell_type":"markdown","source":["#Problem definition on Reaktoro"],"metadata":{"id":"ol41Fjf38Yql"}},{"cell_type":"markdown","metadata":{"id":"U_jiR_CvRICO"},"source":["To solve the system defined above, it is necessary to define the problem in terms that Reaktoro can handle.\n","\n","Reaktoro will then minimize the Gibbs free energy of the system for a set composition, flow, pressure and temperature.\n","\n","Initially, all streams will be at ambient temperature and pressure, from which a Gibbs free energy balance will be performed to account for the demixing power requirements.\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"QjYK6fxQRcV8","executionInfo":{"status":"ok","timestamp":1661334504007,"user_tz":-120,"elapsed":133,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"outputs":[],"source":["#Initialize a thermodynamic database\n","\n","db = SupcrtDatabase(\"supcrtbl\")\n","\n","#Define the chemical system\n","\n","species = (\"H2O(aq) H+ OH- Na+ Cl- Ca+2 Mg+2 NO3- SO4-2\")\n","species_list = species.split()\n","\n","solution = AqueousPhase(species)\n","\n","# solution.setActivityModel(ActivityModelHKF())\n","solution.setActivityModel(ActivityModelPitzerHMW())\n","\n","system = ChemicalSystem(db, solution)"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"tZ-jXJskRJRm","executionInfo":{"status":"ok","timestamp":1661334504009,"user_tz":-120,"elapsed":132,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"outputs":[],"source":["inlet_state = ChemicalState(system)\n","inlet_state.temperature(T_env, \"K\")\n","inlet_state.pressure(P_env, \"atm\")\n","inlet_state.set(\"H2O(aq)\", mass_flow_solution * (1e6 - TDS)/1e6 , \"kg\")\n","\n","for ion, row in Water.iterrows():\n","  inlet_state.set(ion, Water.loc[ion, \"wt_fraction_dry\"] * mass_flow_solution * TDS/1e6,   \"kg\")\n","\n","permiate_state = ChemicalState(system)\n","permiate_state.temperature(T_env, \"K\")\n","permiate_state.pressure(P_env, \"atm\")\n","permiate_state.set(\"H2O(aq)\", mass_flow_solution * liquid_permiating_fraction * (1e6 - TDS)/1e6 , \"kg\")\n","\n","for ion, row in Water.iterrows():\n","  permiate_state.set(ion, Water.loc[ion, \"wt_fraction_dry\"] * mass_flow_solution * solute_permiating_fraction * TDS/1e6,   \"kg\")\n","\n","retentate_state = ChemicalState(system)\n","retentate_state.temperature(T_env, \"K\")\n","retentate_state.pressure(P_env, \"atm\")\n","retentate_state.set(\"H2O(aq)\", mass_flow_solution * (1- liquid_permiating_fraction) * (1e6 - TDS)/1e6 , \"kg\")\n","\n","for ion, row in Water.iterrows():\n","  retentate_state.set(ion, Water.loc[ion, \"wt_fraction_dry\"] * mass_flow_solution * (1 - solute_permiating_fraction ) * TDS/1e6,   \"kg\")"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"xDNHfUy6Rts0","executionInfo":{"status":"ok","timestamp":1661334504012,"user_tz":-120,"elapsed":133,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"outputs":[],"source":["solver = EquilibriumSolver(system)\n","\n","result = solver.solve(inlet_state)  # equilibrate the `state` object!\n","assert result.optima.succeeded\n","\n","result = solver.solve(permiate_state)  # equilibrate the `state` object!\n","assert result.optima.succeeded\n","\n","result = solver.solve(retentate_state)  # equilibrate the `state` object!\n","assert result.optima.succeeded"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"RggYgdnmR1Nd","executionInfo":{"status":"ok","timestamp":1661334504015,"user_tz":-120,"elapsed":134,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}}},"outputs":[],"source":["def gibbsEnergy(props):\n","    u = props.speciesChemicalPotentials()\n","    n = props.speciesAmounts()\n","    G = 0.0\n","    for i in range(len(n)):\n","        G += n[i] * u[i]\n","    return G\n","    \n","Gibbs_Free_Energy_inlet = gibbsEnergy(inlet_state.props())\n","Gibbs_Free_Energy_permiate = gibbsEnergy(permiate_state.props())\n","Gibbs_Free_Energy_retentate = gibbsEnergy(retentate_state.props())"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":135,"status":"ok","timestamp":1661334504018,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"},"user_tz":-120},"id":"IvctHHljR57N","outputId":"8a08aef2-a4aa-49c6-c267-842c31cfa37c"},"outputs":[{"output_type":"stream","name":"stdout","text":["The demixing Gibbs Free Energy is + 0.266616 W , which will have to be provided by means of pumping the inlet\n"]}],"source":["DG = ( Gibbs_Free_Energy_retentate + Gibbs_Free_Energy_permiate - Gibbs_Free_Energy_inlet )\n","\n","print(\"The demixing Gibbs Free Energy is +\", str(DG), \"W\", \", which will have to be provided by means of pumping the inlet\")"]},{"cell_type":"markdown","source":["#Osmotic Pressure calculation"],"metadata":{"id":"YyVtQNPX8rh3"}},{"cell_type":"markdown","metadata":{"id":"6wkDi5JoY2cn"},"source":["Once the demixing power has been calculated, the inlet must be pumped so that it retains the necessary Gibbs free energy that satisfies the total DG balance. This is DG_total = DG_pumping + DG_RO = 0; DG_pumping = -DG_RO.\n","\n","The pressure is iterated until the DG constraint is reached. Under these conditions, the elevated pressure is the so-called osmotic pressure. This is the minimum pressure to be exerted at the inlet to perform the demixing step."]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":127,"status":"ok","timestamp":1661334504021,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"},"user_tz":-120},"id":"dZa7aRZmSC7c","outputId":"c4d97268-68b7-463e-b680-3e5a51a045a0"},"outputs":[{"output_type":"stream","name":"stdout","text":["The required osmotic pressure to be exerted for demixing is 3.15751 atm\n","The Gibbs Free Energy Balance openness is -5.82077e-11 W\n"]}],"source":["props = ChemicalProps(inlet_state)\n","\n","specs = EquilibriumSpecs(system)\n","specs.temperature()\n","\n","idxDG = specs.addInput(\"DG\")\n","\n","GibbsConstraint = ConstraintEquation()\n","GibbsConstraint.id = \"DGConstraint\" \n","GibbsConstraint.fn = lambda props, w: float(Gibbs_Free_Energy_retentate) + float(Gibbs_Free_Energy_permiate) - gibbsEnergy(props) - w[idxDG]\n","specs.addConstraint(GibbsConstraint)\n","\n","solver = EquilibriumSolver(specs)\n","\n","options = EquilibriumOptions()\n","options.optima.output.active = True\n","solver.setOptions(options)\n","\n","conditions = EquilibriumConditions(specs)\n","\n","conditions.temperature(T_env, \"K\")\n","conditions.set(\"DG\", 0)  \n","\n","conditions.setLowerBoundPressure(1, \"bar\")\n","conditions.setUpperBoundPressure(10, \"bar\")  \n","\n","result = solver.solve(inlet_state, conditions)\n","assert result.optima.succeeded\n","\n","atm_to_Pa = 101325 #Pa/atm\n","\n","print(f\"The required osmotic pressure to be exerted for demixing is {inlet_state.props().pressure()/atm_to_Pa} atm\")\n","print(\"The Gibbs Free Energy Balance openness is\", Gibbs_Free_Energy_retentate + Gibbs_Free_Energy_permiate - gibbsEnergy(inlet_state.props()), \"W\")\n","\n"]},{"cell_type":"markdown","source":["#Accounting for real operation (non-idealities)"],"metadata":{"id":"emBEtkf3841S"}},{"cell_type":"markdown","metadata":{"id":"zZSS2rhfX-vf"},"source":["As any real machine, Reverse Osmosis does not have input-output 100% efficiency when converting pressure energy and selectively permiating. A great chunk of the mechanical power is degraded into thermal power via friction. The following lines correspond to the calculation of the adiabatic shooting that the two outlets undergo, raising their temperature by means of irreversible heat generation. "]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":122,"status":"ok","timestamp":1661334504024,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"},"user_tz":-120},"id":"cKGehMjsSNnp","outputId":"a71ac378-c50d-48b1-fae7-bcb838cbd434"},"outputs":[{"output_type":"stream","name":"stdout","text":["By comparing a typical efficiency with the one calculated, the real operating is 6.15791 atm\n","Efficiency taken from: https://www.mdpi.com/1996-1073/14/8/2275\n","A commercial RO membrane meant for household would require a pressure in the range of 3 - 8  atm\n","Household RO device specs taken from: Page 17 - https://www.purewaterproducts.com/img/docs/manuals/FLEXEON-210-LT-SERIES-USERS-MANUAL.pdf\n","The real power is 5.3453 W_PVwork\n","The irreversible heat generation is 5.07868 W_thermal\n"]}],"source":["k = 1e-6 #Convergence factor\n","\n","P_osm = inlet_state.props().pressure()/atm_to_Pa\n","\n","Operating_pressure = 2*P_osm\n","\n","Efficiency_low_P_RO =  0.05 #https://www.mdpi.com/1996-1073/14/8/2275 \n","\n","\n","for k in range(1000):\n","         \n","  Volumetric_flow = inlet_state.props().mass()/ inlet_state.props().density() #m3/s\n","\n","  Osmotic_power = (P_osm - P_env) *  atm_to_Pa * Volumetric_flow   #W\n","\n","  Real_power = (Operating_pressure - P_env) *  atm_to_Pa * Volumetric_flow  #W\n","\n","  Irreversible_heat_generation = (Real_power - Osmotic_power) #W\n","\n","  Efficiency_calculated = Osmotic_power / Real_power\n","\n","  Error_eff = (Efficiency_calculated - Efficiency_low_P_RO)*(Efficiency_calculated - Efficiency_low_P_RO)\n","\n","  Operating_pressure = Operating_pressure - k * Error_eff\n","\n","\n","#print(Operating_pressure, Error_eff)\n","\n","print(\"By comparing a typical efficiency with the one calculated, the real operating is\", Operating_pressure, \"atm\")\n","\n","print(\"Efficiency taken from: https://www.mdpi.com/1996-1073/14/8/2275\")\n","\n","print(\"A commercial RO membrane meant for household would require a pressure in the range of 3 - 8  atm\")\n","\n","print(\"Household RO device specs taken from: Page 17 - https://www.purewaterproducts.com/img/docs/manuals/FLEXEON-210-LT-SERIES-USERS-MANUAL.pdf\")\n","\n","print(\"The real power is\", Real_power, \"W_PVwork\")\n","\n","print(\"The irreversible heat generation is\", (Real_power - Osmotic_power), \"W_thermal\")"]},{"cell_type":"markdown","metadata":{"id":"S4nJoYqmX8TD"},"source":["Now, as we know that there is a degradated PV power going to thermal energy, the outlet streams temperatures will be raised accordingly. This is done with a fixed point convergence method, iterating the adiabatic temperature to satisfy an enthalpy balance.\n"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":116,"status":"ok","timestamp":1661334504027,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"},"user_tz":-120},"id":"cTtdu9qzSXy3","outputId":"f95f40f8-6c51-4345-8fb9-e180cebabcb7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Temperature overshooting raises up permiate and retantate by 0.072943 C\n","Leading an energy balance error of -2.79634e-11 W\n","Permiate and retantate exit at 25.0729 C instead of 25.0 C\n"]}],"source":["T_iter = 25 #C\n","T_iter = T_iter + 273.15 #K\n","\n","k = 1e-3\n","\n","for iter in range(2000):\n","\n","  permiate_state.temperature(T_iter, \"K\")\n","  retentate_state.temperature(T_iter, \"K\")\n","\n","  mcp_permiate = permiate_state.props().heatCapacityConstP()   #W/K\n","  mcp_retentate = retentate_state.props().heatCapacityConstP()  #W/K\n","\n","  error_T =  (T_iter - T_env) * ( mcp_permiate + mcp_retentate ) - Irreversible_heat_generation #W\n","\n","  T_iter = T_iter - k * error_T \n","\n","print(\"Temperature overshooting raises up permiate and retantate by\",  T_iter - T_env, \"C\")\n","\n","print(\"Leading an energy balance error of\", error_T, \"W\")\n","\n","print(\"Permiate and retantate exit at\", T_iter - 273.15, \"C\", \"instead of\", T_env - 273.15, \"C\")"]},{"cell_type":"markdown","source":["##Concluding remarks\n","\n","For the set of salt and liquid permeating pass, inlet temperature, inlet pressure and energy efficiency, the operating pressure is within the range provided by the manufacturer.\n","\n","Adibatic overshooting takes most of the mecanical power, once degradated via friction. However, as the heat capacities of the aqueous outlets are high, temperature raising is within the 1e-2 C order of magnitude\n"],"metadata":{"id":"YKT-GCGi9KJw"}},{"cell_type":"code","source":["import ipywidgets as widgets\n","from IPython.display import display, Javascript\n","\n","out = widgets.Output()\n","\n","\n","def window_open_button(url):\n","    with out:\n","        display(Javascript(f'window.open(\"{url.tooltip}\");'))\n","\n","\n","ss = widgets.Button(description=\"My LinkedIn\", tooltip='https://www.linkedin.com/in/enrique-garcia-franco/?locale=en_US')\n","ss.on_click(window_open_button)\n","\n","with out:\n","    display(ss)\n","out"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["a1f6895e7ac74134b1b36b1b29e2d68b","ebedbb17a8254d16afe67275e0d834ed","7491097612f443d9840ede8206e28721","328688a2823444009602b14115d19920","3844ebcf571c47d4b2404df62cc0dd97"]},"id":"P-syoDMGPDk3","executionInfo":{"status":"ok","timestamp":1661334614928,"user_tz":-120,"elapsed":438,"user":{"displayName":"Enrique Garc√≠a Franco","userId":"00137025036328692852"}},"outputId":"2dcb4709-31b4-4209-f8df-ab02e27a0a1e"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["Output()"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a1f6895e7ac74134b1b36b1b29e2d68b"}},"metadata":{}}]},{"cell_type":"code","source":[""],"metadata":{"id":"NpXP6uVbQPzG"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Example_Real_Reverse_Osmosis.ipynb","provenance":[]},"kernelspec":{"display_name":"Python 3.9.9","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.9"},"vscode":{"interpreter":{"hash":"f7b85e1c57663dadfb160987b5fd4314c3b67ba1288b41b1f3100b0a4ec89065"}},"widgets":{"application/vnd.jupyter.widget-state+json":{"a1f6895e7ac74134b1b36b1b29e2d68b":{"model_module":"@jupyter-widgets/output","model_name":"OutputModel","model_module_version":"1.0.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/output","_model_module_version":"1.0.0","_model_name":"OutputModel","_view_count":null,"_view_module":"@jupyter-widgets/output","_view_module_version":"1.0.0","_view_name":"OutputView","layout":"IPY_MODEL_7491097612f443d9840ede8206e28721","msg_id":"","outputs":[{"output_type":"display_data","data":{"text/plain":"Button(description='My LinkedIn', style=ButtonStyle(), tooltip='https://www.linkedin.com/in/enrique-garcia-fra‚Ä¶","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ebedbb17a8254d16afe67275e0d834ed"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"window.open(\"https://www.linkedin.com/in/enrique-garcia-franco/?locale=en_US\");"},"metadata":{}}]}},"ebedbb17a8254d16afe67275e0d834ed":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"My LinkedIn","disabled":false,"icon":"","layout":"IPY_MODEL_328688a2823444009602b14115d19920","style":"IPY_MODEL_3844ebcf571c47d4b2404df62cc0dd97","tooltip":"https://www.linkedin.com/in/enrique-garcia-franco/?locale=en_US"}},"7491097612f443d9840ede8206e28721":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"328688a2823444009602b14115d19920":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3844ebcf571c47d4b2404df62cc0dd97":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}}}}},"nbformat":4,"nbformat_minor":0}
